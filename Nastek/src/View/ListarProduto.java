/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import connection.ConectaBanco;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Produto;
import modeldao.ProdutoDao;

/**
 *
 * @author eduardo
 */
public class ListarProduto extends javax.swing.JFrame {
    conexao2 cb =new conexao2();
    int id = 0;
    /**
     * Creates new form ListarProduto
     */
    public ListarProduto() {
        initComponents();
        PreencheCombo();
        
    }
    public void PreencheCombo(){
        String sql = "select nome from categoria";
        ResultSet rs = cb.buscaDados(sql);
        try {
            while(rs.next()){
                combo.addItem(rs.getString(1));
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null,e);

        }
    }
    public void readTabela(){
        DefaultTableModel modelo = (DefaultTableModel) tabela.getModel();
        
        ProdutoDao pdao =new ProdutoDao();
        modelo.setNumRows(0);
        
        try {
            //criando um laço de repetição para percorrer a lista criada na dao
            //e adiciona na jtable
            for(Produto p : pdao.lista()){
                modelo.addRow(new Object[]{
                    p.getId(),
                    p.getNome(),
                    p.getQtd(),
                    p.getFk_cat(),
                    p.getValor()
                });
            }
        } catch (SQLException ex) {
            Logger.getLogger(ListarProduto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public void readTabelaporCat(int idcat){
        DefaultTableModel modelo = (DefaultTableModel) tabela.getModel();
        
        ProdutoDao pdao =new ProdutoDao();
        modelo.setNumRows(0);
        
        try {
            //criando um laço de repetição para percorrer a lista criada na dao
            //e adiciona na jtable
            for(Produto p : pdao.listaporcat(idcat)){
                modelo.addRow(new Object[]{
                    p.getId(),
                    p.getNome(),
                    p.getQtd(),
                    p.getFk_cat(),
                    p.getValor()
                });
            }
        } catch (SQLException ex) {
            Logger.getLogger(ListarProduto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        listpnome = new javax.swing.JButton();
        listpqtd = new javax.swing.JButton();
        listpmen = new javax.swing.JButton();
        listpcat = new javax.swing.JButton();
        combo = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtval = new javax.swing.JTextField();
        txtnome = new javax.swing.JTextField();
        txtquant = new javax.swing.JTextField();
        txtcat = new javax.swing.JTextField();
        atu = new javax.swing.JButton();
        voltar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        listpnome.setText("Listar por Nome");
        listpnome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listpnomeActionPerformed(evt);
            }
        });

        listpqtd.setText("Listar por quantidade");
        listpqtd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listpqtdActionPerformed(evt);
            }
        });

        listpmen.setText("Listar por maior e menor qunatidade");
        listpmen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listpmenActionPerformed(evt);
            }
        });

        listpcat.setText("Listar p/ categoria");
        listpcat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listpcatActionPerformed(evt);
            }
        });

        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "nome", "quantidade", "categoria", "valor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabela.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaMouseClicked(evt);
            }
        });
        tabela.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tabelaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tabelaKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tabela);

        jLabel1.setText("Atualizar");

        jLabel2.setText("Nome");

        jLabel3.setText("Quantidade");

        jLabel4.setText("Categoria");

        jLabel5.setText("Valor");

        atu.setText("Atualizar");
        atu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atuActionPerformed(evt);
            }
        });

        voltar.setText("Voltar");
        voltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voltarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(276, 276, 276)
                        .addComponent(jLabel1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtnome, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtquant, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtcat, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtval, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(voltar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(atu)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(listpcat)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(combo, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(listpmen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(listpqtd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(listpnome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 465, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(listpnome)
                        .addGap(18, 18, 18)
                        .addComponent(listpqtd)
                        .addGap(18, 18, 18)
                        .addComponent(listpmen)
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(listpcat)
                            .addComponent(combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(71, 71, 71)
                .addComponent(jLabel1)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(txtval, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtquant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtcat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtnome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(atu)
                    .addComponent(voltar))
                .addContainerGap(207, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void listpmenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listpmenActionPerformed
        // TODO add your handling code here:
        DefaultTableModel modelo = (DefaultTableModel) tabela.getModel();
        
        ProdutoDao pdao = new ProdutoDao();
        modelo.setNumRows(0);
        
        try {
            //criando um laço de repetição para percorrer a lista criada na dao
            //e adiciona na jtable
            for(Produto p : pdao.listaquantmn()){
                modelo.addRow(new Object[]{
                    p.getId(),
                    p.getNome(),
                    p.getQtd(),
                    p.getFk_cat(),
                    p.getValor()
                });
            }
        } catch (SQLException ex) {
            Logger.getLogger(ListarProduto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_listpmenActionPerformed

    private void listpnomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listpnomeActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) tabela.getModel();
        
        ProdutoDao pdao =new ProdutoDao();
        modelo.setNumRows(0);
        
        try {
            //criando um laço de repetição para percorrer a lista criada na dao
            //e adiciona na jtable
            for(Produto p : pdao.lista()){
                modelo.addRow(new Object[]{
                    p.getId(),
                    p.getNome(),
                    p.getQtd(),
                    p.getFk_cat(),
                    p.getValor()
                });
            }
        } catch (SQLException ex) {
            Logger.getLogger(ListarProduto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_listpnomeActionPerformed

    private void listpcatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listpcatActionPerformed
        // TODO add your handling code here:
        String sql = "select idCategoria from categoria where nome like '"+combo.getSelectedItem().toString()+"'";
        ResultSet rs = cb.buscaDados(sql);
        int idcat = 0;
        try {
            while(rs.next()){
                idcat = rs.getInt(1);
                readTabelaporCat(idcat);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_listpcatActionPerformed

    private void tabelaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabelaKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tabelaKeyPressed
                                

    private void atuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atuActionPerformed
        // TODO add your handling code here:
        
        if(tabela.getSelectedRow() != -1){
            Produto prod = new Produto();
            ProdutoDao pd = new ProdutoDao();
            
            prod.setNome(txtnome.getText());
            prod.setQtd(Integer.parseInt(txtquant.getText()));
            prod.setFk_cat(Integer.parseInt(txtcat.getText()));
            prod.setValor(Double.parseDouble(txtval.getText()));
            
            prod.setId((int)tabela.getValueAt(tabela.getSelectedRow(), 0));
            
            pd.update(prod);
            txtnome.setText("");
            txtquant.setText("");
            txtval.setText("");
            txtcat.setText("");
            
            readTabela();
            
   
        }    
    }//GEN-LAST:event_atuActionPerformed
    
    private void tabelaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabelaKeyReleased
        // TODO add your handling code here:
            
    }//GEN-LAST:event_tabelaKeyReleased

    private void tabelaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaMouseClicked
        // TODO add your handling code here:
        
        if(tabela.getSelectedRow() != -1){
                txtnome.setText(tabela.getValueAt(tabela.getSelectedRow(),1).toString());
                txtquant.setText(tabela.getValueAt(tabela.getSelectedRow(),2).toString());
                txtcat.setText(tabela.getValueAt(tabela.getSelectedRow(),3).toString());
                txtval.setText(tabela.getValueAt(tabela.getSelectedRow(),4).toString());

            }else{
                JOptionPane.showMessageDialog(null,"Selecione um produto para atualizar");

            }
    }//GEN-LAST:event_tabelaMouseClicked

    private void listpqtdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listpqtdActionPerformed
        // TODO add your handling code here:
        
        DefaultTableModel modelo = (DefaultTableModel) tabela.getModel();
        
        ProdutoDao pdao = new ProdutoDao();
        modelo.setNumRows(0);
        
        try {
            //criando um laço de repetição para percorrer a lista criada na dao
            //e adiciona na jtable
            for(Produto p : pdao.listaquant()){
                modelo.addRow(new Object[]{
                    p.getId(),
                    p.getNome(),
                    p.getQtd(),
                    p.getFk_cat(),
                    p.getValor()
                });
            }
        } catch (SQLException ex) {
            Logger.getLogger(ListarProduto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_listpqtdActionPerformed

    private void voltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voltarActionPerformed
        // TODO add your handling code here:
        Principal princ = new Principal();
        princ.setVisible(true);
    }//GEN-LAST:event_voltarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListarProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListarProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListarProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListarProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListarProduto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton atu;
    private javax.swing.JComboBox<String> combo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton listpcat;
    private javax.swing.JButton listpmen;
    private javax.swing.JButton listpnome;
    private javax.swing.JButton listpqtd;
    private javax.swing.JTable tabela;
    private javax.swing.JTextField txtcat;
    private javax.swing.JTextField txtnome;
    private javax.swing.JTextField txtquant;
    private javax.swing.JTextField txtval;
    private javax.swing.JButton voltar;
    // End of variables declaration//GEN-END:variables
}
